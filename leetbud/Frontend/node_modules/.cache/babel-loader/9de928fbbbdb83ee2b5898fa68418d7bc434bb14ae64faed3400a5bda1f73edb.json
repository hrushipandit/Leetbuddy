{"ast":null,"code":"import React,{useState,useEffect}from'react';import ReactCardFlip from'react-card-flip';import axios from'axios';import'./Practice.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Practice=()=>{const[isFlipped,setIsFlipped]=useState(false);const[problems,setProblems]=useState([]);const[currentProblemIndex,setCurrentProblemIndex]=useState(0);const[allReviewed,setAllReviewed]=useState(false);useEffect(()=>{fetchProblems();},[]);const fetchProblems=async()=>{try{const response=await axios.get('https://www.leetbud.com/api/problems/reviews',{withCredentials:true});setProblems(response.data.length?response.data:[]);setAllReviewed(response.data.length===0);}catch(error){console.error('Error fetching problems:',error);}};const flipCard=()=>{setIsFlipped(!isFlipped);};const handleReviewSubmit=async quality=>{const problemId=problems[currentProblemIndex]._id;try{await axios.put(\"https://www.leetbud.com/api/problems/review/\".concat(problemId),{quality},{withCredentials:true});moveToNextProblem();}catch(error){console.error('Error submitting review:',error);}};const handleGetHint=async()=>{const{code,question_name,question}=problems[currentProblemIndex];try{const response=await axios.post('https://www.leetbud.com/generate-hints',{code,question_name,question,withCredentials:true});alert('Hint: '+response.data.hint);// Display the hint in an alert or set it in the state to display in the UI\n}catch(error){console.error('Error fetching hint:',error);}};const moveToNextProblem=()=>{const nextIndex=(currentProblemIndex+1)%problems.length;setCurrentProblemIndex(nextIndex);setIsFlipped(false);if(nextIndex===0){setAllReviewed(true);}};const renderTextWithNewLines=text=>{return text.split('\\n').map((str,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[str,/*#__PURE__*/_jsx(\"br\",{})]},index));};const{question,question_name,code,notes}=problems[currentProblemIndex]||{};return/*#__PURE__*/_jsx(\"div\",{children:problems.length===0?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"No problems are available for review today.\"})}):!allReviewed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ReactCardFlip,{flipDirection:\"horizontal\",isFlipped:isFlipped,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-white shadow-md cursor-pointer\",onClick:flipCard,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:question_name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg whitespace-pre-wrap overflow-auto full-height-content\",children:question})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card card-back bg-white shadow-md cursor-pointer\",onClick:flipCard,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"half-height-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Code\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"text-left whitespace-pre-wrap overflow-auto text-sm bg-gray-100 p-3 rounded-lg\",children:code})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"half-height-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"text-lg whitespace-pre-wrap\",children:notes})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\",onClick:()=>handleReviewSubmit(1),children:\"Hard\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\",onClick:()=>handleReviewSubmit(3),children:\"Good\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\",onClick:()=>handleReviewSubmit(5),children:\"Easy\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\",onClick:handleGetHint,children:\"Get Hint\"})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Thank you for completing your reviews for today!\"})})});};export default Practice;","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Practice","isFlipped","setIsFlipped","problems","setProblems","currentProblemIndex","setCurrentProblemIndex","allReviewed","setAllReviewed","fetchProblems","response","get","withCredentials","data","length","error","console","flipCard","handleReviewSubmit","quality","problemId","_id","put","concat","moveToNextProblem","handleGetHint","code","question_name","question","post","alert","hint","nextIndex","renderTextWithNewLines","text","split","map","str","index","children","notes","flipDirection","className","onClick"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/Frontend/src/components/pages/Practice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\nimport { ReactNode } from 'react';\r\ninterface Problem {\r\n    _id: string;\r\n    question_name: string;\r\n    question: string,\r\n    code: string;\r\n    notes: string;\r\n    nextReviewDate: Date;\r\n}\r\n\r\nexport const Practice = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [problems, setProblems] = useState<Problem[]>([]);\r\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\r\n    const [allReviewed, setAllReviewed] = useState(false); \r\n\r\n    useEffect(() => {\r\n        fetchProblems();\r\n    }, []);\r\n\r\n    const fetchProblems = async () => {\r\n        try {\r\n            const response = await axios.get('https://www.leetbud.com/api/problems/reviews', { withCredentials: true });\r\n            setProblems(response.data.length ? response.data : []);\r\n            setAllReviewed(response.data.length === 0);\r\n        } catch (error) {\r\n            console.error('Error fetching problems:', error);\r\n        }\r\n    };\r\n\r\n    const flipCard = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n\r\n    const handleReviewSubmit = async (quality: number) => {\r\n        const problemId = problems[currentProblemIndex]._id;\r\n        try {\r\n            await axios.put(`https://www.leetbud.com/api/problems/review/${problemId}`, { quality }, { withCredentials: true });\r\n            moveToNextProblem();\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetHint = async () => {\r\n        const { code, question_name, question } = problems[currentProblemIndex];\r\n        try {\r\n            const response = await axios.post('https://www.leetbud.com/generate-hints', {\r\n                code,\r\n                question_name,\r\n                question,\r\n                withCredentials: true\r\n            });\r\n            alert('Hint: ' + response.data.hint); // Display the hint in an alert or set it in the state to display in the UI\r\n        } catch (error) {\r\n            console.error('Error fetching hint:', error);\r\n        }\r\n    };\r\n\r\n    const moveToNextProblem = () => {\r\n        const nextIndex = (currentProblemIndex + 1) % problems.length;\r\n        setCurrentProblemIndex(nextIndex);\r\n        setIsFlipped(false);\r\n        if (nextIndex === 0) {\r\n            setAllReviewed(true);\r\n        }\r\n    };\r\n\r\n    const renderTextWithNewLines = (text: string): ReactNode => {\r\n        return text.split('\\n').map((str: string, index: number) => (\r\n            <React.Fragment key={index}>\r\n                {str}\r\n                <br />\r\n            </React.Fragment>\r\n        ));\r\n    };\r\n\r\n    const { question, question_name, code, notes } = problems[currentProblemIndex] || {};\r\n\r\n    return (\r\n        <div>\r\n            {problems.length === 0 ? (\r\n                <div><h2>No problems are available for review today.</h2></div>\r\n            ) : (\r\n                !allReviewed ? (\r\n                    <>\r\n                            <ReactCardFlip flipDirection='horizontal' isFlipped={isFlipped}>\r\n                                <div className='card bg-white shadow-md cursor-pointer' onClick={flipCard}>\r\n                                    <h1 className=\"text-2xl font-bold\">{question_name}</h1>\r\n                                    <p className=\"text-lg whitespace-pre-wrap overflow-auto full-height-content\">{question}</p>\r\n                                </div>\r\n                                <div className='card card-back bg-white shadow-md cursor-pointer' onClick={flipCard}>\r\n                                    <div className=\"half-height-content\">\r\n                                        <h1 className=\"text-2xl font-bold\">Code</h1>\r\n                                        <pre className=\"text-left whitespace-pre-wrap overflow-auto text-sm bg-gray-100 p-3 rounded-lg\">{code}</pre>\r\n                                    </div>\r\n                                    <div className=\"half-height-content\">\r\n                                        <h1 className=\"text-2xl font-bold\">Notes</h1>\r\n                                        <pre className=\"text-lg whitespace-pre-wrap\">{notes}</pre>\r\n                                    </div>\r\n                                </div>\r\n                            </ReactCardFlip>\r\n                        <button className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\" onClick={() => handleReviewSubmit(1)}>Hard</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\" onClick={() => handleReviewSubmit(3)}>Good</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\" onClick={() => handleReviewSubmit(5)}>Easy</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\" onClick={handleGetHint}>Get Hint</button>\r\n                    </>\r\n                ) : (\r\n                    <div><h2>Thank you for completing your reviews for today!</h2></div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}