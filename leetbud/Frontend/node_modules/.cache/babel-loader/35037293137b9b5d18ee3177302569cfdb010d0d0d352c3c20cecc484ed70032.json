{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Personal Projects\\\\Leetbud\\\\leetbud\\\\Frontend\\\\src\\\\components\\\\pages\\\\Practice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [problems, setProblems] = useState([]);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [allReviewed, setAllReviewed] = useState(false); // State to check if all problems are reviewed\n\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n  const fetchProblems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/problems/reviews', {\n        withCredentials: true\n      });\n      if (response.data.length === 0) {\n        setAllReviewed(true); // No problems to review, set all reviewed to true\n      } else {\n        setProblems(response.data);\n      }\n      console.log('Problems fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching problems:', error);\n    }\n  };\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleReviewSubmit = async quality => {\n    const problemId = problems[currentProblemIndex]._id;\n    try {\n      await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, {\n        quality\n      }, {\n        withCredentials: true\n      });\n      console.log('Review updated for problem:', problemId);\n      const nextIndex = (currentProblemIndex + 1) % problems.length;\n      if (nextIndex === 0) {\n        setAllReviewed(true); // If we're back at the first problem, all problems have been reviewed\n      }\n      setCurrentProblemIndex(nextIndex);\n      setIsFlipped(false); // Reset card flip for the next problem\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  const restartReview = () => {\n    setCurrentProblemIndex(0);\n    setAllReviewed(false);\n    setIsFlipped(false);\n  };\n  if (allReviewed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for completing your reviews for today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartReview,\n        children: \"Revise Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  if (problems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" All done for today!.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    question_name,\n    code,\n    notes\n  } = problems[currentProblemIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      flipDirection: \"horizontal\",\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: flipCard,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-back\",\n        onClick: flipCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(1),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(3),\n        children: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(5),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Practice, \"gWKVQdAPzph9rcUyzZtW+AqkbxQ=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","axios","jsxDEV","_jsxDEV","Practice","_s","isFlipped","setIsFlipped","problems","setProblems","currentProblemIndex","setCurrentProblemIndex","allReviewed","setAllReviewed","fetchProblems","response","get","withCredentials","data","length","console","log","error","flipCard","handleReviewSubmit","quality","problemId","_id","put","nextIndex","restartReview","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question_name","code","notes","flipDirection","className","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/Frontend/src/components/pages/Practice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\n\r\ninterface Problem {\r\n    _id: string;\r\n    question_name: string;\r\n    code: string;\r\n    notes: string;\r\n    nextReviewDate: Date;\r\n}\r\n\r\nexport const Practice = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [problems, setProblems] = useState<Problem[]>([]);\r\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\r\n    const [allReviewed, setAllReviewed] = useState(false); // State to check if all problems are reviewed\r\n\r\n    useEffect(() => {\r\n        fetchProblems();\r\n    }, []);\r\n\r\n    const fetchProblems = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/problems/reviews', { withCredentials: true });\r\n            if (response.data.length === 0) {\r\n                setAllReviewed(true); // No problems to review, set all reviewed to true\r\n            } else {\r\n                setProblems(response.data);\r\n            }\r\n            console.log('Problems fetched:', response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching problems:', error);\r\n        }\r\n    };\r\n\r\n    const flipCard = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    const handleReviewSubmit = async (quality: number) => {\r\n        const problemId = problems[currentProblemIndex]._id;\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, { quality }, { withCredentials: true });\r\n            console.log('Review updated for problem:', problemId);\r\n\r\n            const nextIndex = (currentProblemIndex + 1) % problems.length;\r\n            if (nextIndex === 0) {\r\n                setAllReviewed(true); // If we're back at the first problem, all problems have been reviewed\r\n            }\r\n            setCurrentProblemIndex(nextIndex);\r\n            setIsFlipped(false); // Reset card flip for the next problem\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    const restartReview = () => {\r\n        setCurrentProblemIndex(0);\r\n        setAllReviewed(false);\r\n        setIsFlipped(false);\r\n    };\r\n\r\n    if (allReviewed) {\r\n        return (\r\n            <div>\r\n                <h2>Thank you for completing your reviews for today!</h2>\r\n               // <button onClick={restartReview}>Revise Again</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (problems.length === 0) {\r\n        return <div> All done for today!.</div>;\r\n    }\r\n\r\n    const { question_name, code, notes } = problems[currentProblemIndex];\r\n\r\n    return (\r\n        <div>\r\n            <ReactCardFlip flipDirection='horizontal' isFlipped={isFlipped}>\r\n                <div className='card' onClick={flipCard}>\r\n                    <h1>{question_name}</h1>\r\n                </div>\r\n                <div className='card card-back' onClick={flipCard}>\r\n                    <h1>Code</h1>\r\n                    <p>{code}</p>\r\n                    <h1>Notes</h1>\r\n                    <p>{notes}</p>\r\n                </div>\r\n            </ReactCardFlip>\r\n            <div>\r\n                <button onClick={() => handleReviewSubmit(1)}>Hard</button>\r\n                <button onClick={() => handleReviewSubmit(3)}>Good</button>\r\n                <button onClick={() => handleReviewSubmit(5)}>Easy</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}