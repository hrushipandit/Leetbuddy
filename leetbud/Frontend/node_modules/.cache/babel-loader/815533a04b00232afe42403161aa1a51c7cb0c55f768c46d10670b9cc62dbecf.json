{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Personal Projects\\\\Leetbud\\\\leetbud\\\\Frontend\\\\src\\\\components\\\\pages\\\\Practice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [problems, setProblems] = useState([]);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n  const fetchProblems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/problems/reviews', {\n        withCredentials: true\n      });\n      setProblems(response.data);\n      console.log('Problems fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching problems:', error);\n    }\n  };\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleReviewSubmit = async quality => {\n    const problemId = problems[currentProblemIndex]._id;\n    try {\n      await axios.post(`http://localhost:5000/api/problems/review/${problemId}`, {\n        quality\n      }, {\n        withCredentials: true\n      });\n      console.log('Review submitted for problem:', problemId);\n      // Move to the next problem or reset\n      const nextIndex = (currentProblemIndex + 1) % problems.length;\n      setCurrentProblemIndex(nextIndex);\n      setIsFlipped(false); // Reset card flip for the next problem\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  if (problems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading problems...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    question_name,\n    code,\n    notes\n  } = problems[currentProblemIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      flipDirection: \"horizontal\",\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: flipCard,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-back\",\n        onClick: flipCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(1),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(3),\n        children: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReviewSubmit(5),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Practice, \"J1tGu2jRAHqJC4URSH/g2/64psY=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","axios","jsxDEV","_jsxDEV","Practice","_s","isFlipped","setIsFlipped","problems","setProblems","currentProblemIndex","setCurrentProblemIndex","fetchProblems","response","get","withCredentials","data","console","log","error","flipCard","handleReviewSubmit","quality","problemId","_id","post","nextIndex","length","children","fileName","_jsxFileName","lineNumber","columnNumber","question_name","code","notes","flipDirection","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/Frontend/src/components/pages/Practice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\n\r\ninterface Problem {\r\n    _id: string;\r\n    question_name: string;\r\n    code: string;\r\n    notes: string;\r\n}\r\n\r\nexport const Practice = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [problems, setProblems] = useState<Problem[]>([]);\r\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetchProblems();\r\n    }, []);\r\n\r\n    const fetchProblems = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/problems/reviews', { withCredentials: true });\r\n            setProblems(response.data);\r\n            console.log('Problems fetched:', response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching problems:', error);\r\n        }\r\n    };\r\n\r\n    const flipCard = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    const handleReviewSubmit = async (quality: number) => {\r\n        const problemId = problems[currentProblemIndex]._id;\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/problems/review/${problemId}`, { quality }, { withCredentials: true });\r\n            console.log('Review submitted for problem:', problemId);\r\n            // Move to the next problem or reset\r\n            const nextIndex = (currentProblemIndex + 1) % problems.length;\r\n            setCurrentProblemIndex(nextIndex);\r\n            setIsFlipped(false); // Reset card flip for the next problem\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    if (problems.length === 0) {\r\n        return <div>Loading problems...</div>;\r\n    }\r\n\r\n    const { question_name, code, notes } = problems[currentProblemIndex];\r\n\r\n    return (\r\n        <div>\r\n            <ReactCardFlip flipDirection='horizontal' isFlipped={isFlipped}>\r\n                <div className='card' onClick={flipCard}>\r\n                    <h1>{question_name}</h1>\r\n                </div>\r\n                <div className='card card-back' onClick={flipCard}>\r\n                    <h1>Code</h1>\r\n                    <p>{code}</p>\r\n                    <h1>Notes</h1>\r\n                    <p>{notes}</p>\r\n                </div>\r\n            </ReactCardFlip>\r\n            <div>\r\n                <button onClick={() => handleReviewSubmit(1)}>Hard</button>\r\n                <button onClick={() => handleReviewSubmit(3)}>Good</button>\r\n                <button onClick={() => handleReviewSubmit(5)}>Easy</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}