{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Personal Projects\\\\Leetbud\\\\leetbud\\\\Frontend\\\\src\\\\components\\\\pages\\\\Practice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [problems, setProblems] = useState([]);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [allReviewed, setAllReviewed] = useState(false);\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n  const fetchProblems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/problems/reviews', {\n        withCredentials: true\n      });\n      const hasProblems = response.data.length > 0;\n      setProblems(response.data);\n      setAllReviewed(!hasProblems);\n      console.log('Fetch completed:', {\n        hasProblems,\n        data: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching problems:', error);\n    }\n  };\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleReviewSubmit = async quality => {\n    const problemId = problems[currentProblemIndex]._id;\n    try {\n      await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, {\n        quality\n      }, {\n        withCredentials: true\n      });\n      moveToNextProblem();\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  const handleGetHint = async () => {\n    const {\n      code,\n      question_name,\n      question\n    } = problems[currentProblemIndex];\n    try {\n      const response = await axios.post('http://localhost:5000/generate-hints', {\n        code,\n        question_name,\n        question,\n        withCredentials: true\n      });\n      alert('Hint: ' + response.data.hint); // Display the hint in an alert or set it in the state to display in the UI\n    } catch (error) {\n      console.error('Error fetching hint:', error);\n    }\n  };\n  const moveToNextProblem = () => {\n    const nextIndex = (currentProblemIndex + 1) % problems.length;\n    setCurrentProblemIndex(nextIndex);\n    setIsFlipped(false);\n    if (nextIndex === 0) {\n      setAllReviewed(true);\n    }\n  };\n  if (allReviewed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for completing your reviews for today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    question,\n    question_name,\n    code,\n    notes\n  } = problems[currentProblemIndex] || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      flipDirection: \"horizontal\",\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-white p-4 shadow-md cursor-pointer\",\n        onClick: flipCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: question_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-back bg-white p-4 shadow-md cursor-pointer\",\n        onClick: flipCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\",\n      onClick: () => handleReviewSubmit(1),\n      children: \"Hard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\",\n      onClick: () => handleReviewSubmit(3),\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\",\n      onClick: () => handleReviewSubmit(5),\n      children: \"Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\",\n      onClick: handleGetHint,\n      children: \"Get Hint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Practice, \"gWKVQdAPzph9rcUyzZtW+AqkbxQ=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","axios","jsxDEV","_jsxDEV","Practice","_s","isFlipped","setIsFlipped","problems","setProblems","currentProblemIndex","setCurrentProblemIndex","allReviewed","setAllReviewed","fetchProblems","response","get","withCredentials","hasProblems","data","length","console","log","error","flipCard","handleReviewSubmit","quality","problemId","_id","put","moveToNextProblem","handleGetHint","code","question_name","question","post","alert","hint","nextIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","notes","flipDirection","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/Frontend/src/components/pages/Practice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\n\r\ninterface Problem {\r\n    _id: string;\r\n    question_name: string;\r\n    question: string,\r\n    code: string;\r\n    notes: string;\r\n    nextReviewDate: Date;\r\n}\r\n\r\nexport const Practice = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [problems, setProblems] = useState<Problem[]>([]);\r\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\r\n    const [allReviewed, setAllReviewed] = useState(false); \r\n\r\n    useEffect(() => {\r\n        fetchProblems();\r\n    }, []);\r\n\r\n    const fetchProblems = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/problems/reviews', { withCredentials: true });\r\n            const hasProblems = response.data.length > 0;\r\n            setProblems(response.data);\r\n            setAllReviewed(!hasProblems);\r\n            console.log('Fetch completed:', { hasProblems, data: response.data });\r\n        } catch (error) {\r\n            console.error('Error fetching problems:', error);\r\n        }\r\n    };\r\n\r\n    const flipCard = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n\r\n    const handleReviewSubmit = async (quality: number) => {\r\n        const problemId = problems[currentProblemIndex]._id;\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, { quality }, { withCredentials: true });\r\n            moveToNextProblem();\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetHint = async () => {\r\n        const { code, question_name, question } = problems[currentProblemIndex];\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/generate-hints', {\r\n                code,\r\n                question_name,\r\n                question,\r\n                withCredentials: true\r\n            });\r\n            alert('Hint: ' + response.data.hint); // Display the hint in an alert or set it in the state to display in the UI\r\n        } catch (error) {\r\n            console.error('Error fetching hint:', error);\r\n        }\r\n    };\r\n\r\n    const moveToNextProblem = () => {\r\n        const nextIndex = (currentProblemIndex + 1) % problems.length;\r\n        setCurrentProblemIndex(nextIndex);\r\n        setIsFlipped(false);\r\n        if (nextIndex === 0) {\r\n            setAllReviewed(true);\r\n        }\r\n    };\r\n\r\n    if (allReviewed) {\r\n        return <div><h2>Thank you for completing your reviews for today!</h2></div>;\r\n    }\r\n\r\n    const { question, question_name, code, notes } = problems[currentProblemIndex] || {};\r\n\r\n    return (\r\n        <div>\r\n            <ReactCardFlip flipDirection='horizontal' isFlipped={isFlipped}>\r\n                <div className='card bg-white p-4 shadow-md cursor-pointer' onClick={flipCard}>\r\n                    <h1 className=\"text-2xl font-bold\">{question_name}</h1>\r\n                    <p className=\"text-lg\">{question}</p>\r\n                </div>\r\n                <div className='card card-back bg-white p-4 shadow-md cursor-pointer' onClick={flipCard}>\r\n                    <h1 className=\"text-2xl font-bold\">Code</h1>\r\n                    <p className=\"text-lg\">{code}</p>\r\n                    <h1 className=\"text-2xl font-bold\">Notes</h1>\r\n                    <p className=\"text-lg\">{notes}</p>\r\n                </div>\r\n            </ReactCardFlip>\r\n            <button className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\" onClick={() => handleReviewSubmit(1)}>Hard</button>\r\n            <button className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\" onClick={() => handleReviewSubmit(3)}>Good</button>\r\n            <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\" onClick={() => handleReviewSubmit(5)}>Easy</button>\r\n            <button className=\"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\" onClick={handleGetHint}>Get Hint</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}