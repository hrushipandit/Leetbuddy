{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Personal Projects\\\\Leetbud\\\\leetbud\\\\Frontend\\\\src\\\\components\\\\pages\\\\Practice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [problems, setProblems] = useState([]);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [allReviewed, setAllReviewed] = useState(false);\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n  const fetchProblems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/problems/reviews', {\n        withCredentials: true\n      });\n      setProblems(response.data.length ? response.data : []);\n      setAllReviewed(response.data.length === 0);\n    } catch (error) {\n      console.error('Error fetching problems:', error);\n    }\n  };\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleReviewSubmit = async quality => {\n    const problemId = problems[currentProblemIndex]._id;\n    try {\n      await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, {\n        quality\n      }, {\n        withCredentials: true\n      });\n      moveToNextProblem();\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  const handleGetHint = async () => {\n    const {\n      code,\n      question_name,\n      question\n    } = problems[currentProblemIndex];\n    try {\n      const response = await axios.post('http://localhost:5000/generate-hints', {\n        code,\n        question_name,\n        question,\n        withCredentials: true\n      });\n      alert('Hint: ' + response.data.hint); // Display the hint in an alert or set it in the state to display in the UI\n    } catch (error) {\n      console.error('Error fetching hint:', error);\n    }\n  };\n  const moveToNextProblem = () => {\n    const nextIndex = (currentProblemIndex + 1) % problems.length;\n    setCurrentProblemIndex(nextIndex);\n    setIsFlipped(false);\n    if (nextIndex === 0) {\n      setAllReviewed(true);\n    }\n  };\n  const renderTextWithNewLines = text => {\n    return text.split('\\n').map((str, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [str, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this));\n  };\n  const {\n    question,\n    question_name,\n    code,\n    notes\n  } = problems[currentProblemIndex] || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: problems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No problems are available for review today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this) : !allReviewed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        flipDirection: \"horizontal\",\n        isFlipped: isFlipped,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-white p-4 shadow-md cursor-pointer\",\n          onClick: flipCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            children: question_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg whitespace-pre-wrap overflow-auto h-[30rem]\",\n            children: renderTextWithNewLines(question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-back bg-white p-4 shadow-md cursor-pointer overflow-hidden max-h-screen\",\n          onClick: flipCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"text-lg whitespace-pre-wrap overflow-auto max-h-96\",\n            children: problems[currentProblemIndex].code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold shadow-md cursor-pointer\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg whitespace-pre-wrap  overflow-auto max-h-96\",\n            children: renderTextWithNewLines(notes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\",\n        onClick: () => handleReviewSubmit(1),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\",\n        onClick: () => handleReviewSubmit(3),\n        children: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\",\n        onClick: () => handleReviewSubmit(5),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\",\n        onClick: handleGetHint,\n        children: \"Get Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for completing your reviews for today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Practice, \"gWKVQdAPzph9rcUyzZtW+AqkbxQ=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","ReactCardFlip","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Practice","_s","isFlipped","setIsFlipped","problems","setProblems","currentProblemIndex","setCurrentProblemIndex","allReviewed","setAllReviewed","fetchProblems","response","get","withCredentials","data","length","error","console","flipCard","handleReviewSubmit","quality","problemId","_id","put","moveToNextProblem","handleGetHint","code","question_name","question","post","alert","hint","nextIndex","renderTextWithNewLines","text","split","map","str","index","children","fileName","_jsxFileName","lineNumber","columnNumber","notes","flipDirection","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/Frontend/src/components/pages/Practice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\nimport { ReactNode } from 'react';\r\ninterface Problem {\r\n    _id: string;\r\n    question_name: string;\r\n    question: string,\r\n    code: string;\r\n    notes: string;\r\n    nextReviewDate: Date;\r\n}\r\n\r\nexport const Practice = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [problems, setProblems] = useState<Problem[]>([]);\r\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\r\n    const [allReviewed, setAllReviewed] = useState(false); \r\n\r\n    useEffect(() => {\r\n        fetchProblems();\r\n    }, []);\r\n\r\n    const fetchProblems = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/problems/reviews', { withCredentials: true });\r\n            setProblems(response.data.length ? response.data : []);\r\n            setAllReviewed(response.data.length === 0);\r\n        } catch (error) {\r\n            console.error('Error fetching problems:', error);\r\n        }\r\n    };\r\n\r\n    const flipCard = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n\r\n    const handleReviewSubmit = async (quality: number) => {\r\n        const problemId = problems[currentProblemIndex]._id;\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/problems/review/${problemId}`, { quality }, { withCredentials: true });\r\n            moveToNextProblem();\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetHint = async () => {\r\n        const { code, question_name, question } = problems[currentProblemIndex];\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/generate-hints', {\r\n                code,\r\n                question_name,\r\n                question,\r\n                withCredentials: true\r\n            });\r\n            alert('Hint: ' + response.data.hint); // Display the hint in an alert or set it in the state to display in the UI\r\n        } catch (error) {\r\n            console.error('Error fetching hint:', error);\r\n        }\r\n    };\r\n\r\n    const moveToNextProblem = () => {\r\n        const nextIndex = (currentProblemIndex + 1) % problems.length;\r\n        setCurrentProblemIndex(nextIndex);\r\n        setIsFlipped(false);\r\n        if (nextIndex === 0) {\r\n            setAllReviewed(true);\r\n        }\r\n    };\r\n\r\n    const renderTextWithNewLines = (text: string): ReactNode => {\r\n        return text.split('\\n').map((str: string, index: number) => (\r\n            <React.Fragment key={index}>\r\n                {str}\r\n                <br />\r\n            </React.Fragment>\r\n        ));\r\n    };\r\n\r\n    const { question, question_name, code, notes } = problems[currentProblemIndex] || {};\r\n\r\n    return (\r\n        <div>\r\n            {problems.length === 0 ? (\r\n                <div><h2>No problems are available for review today.</h2></div>\r\n            ) : (\r\n                !allReviewed ? (\r\n                    <>\r\n                        <ReactCardFlip flipDirection='horizontal' isFlipped={isFlipped}>\r\n                            <div className='card bg-white p-4 shadow-md cursor-pointer' onClick={flipCard}>\r\n                                <h1 className=\"text-2xl font-bold\">{question_name}</h1>\r\n                                    <p className=\"text-lg whitespace-pre-wrap overflow-auto h-[30rem]\">{renderTextWithNewLines(question)}</p>\r\n                            </div>\r\n                                <div className='card card-back bg-white p-4 shadow-md cursor-pointer overflow-hidden max-h-screen' onClick={flipCard}>\r\n                                <h1 className=\"text-2xl font-bold\">Code</h1>\r\n                                    <pre className=\"text-lg whitespace-pre-wrap overflow-auto max-h-96\">{problems[currentProblemIndex].code}</pre>\r\n                                    <h1 className=\"text-2xl font-bold shadow-md cursor-pointer\">Notes</h1>\r\n                                    <p className=\"text-lg whitespace-pre-wrap  overflow-auto max-h-96\">{renderTextWithNewLines(notes)}</p>\r\n                            </div>\r\n                        </ReactCardFlip>\r\n                        <button className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-700\" onClick={() => handleReviewSubmit(1)}>Hard</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-700\" onClick={() => handleReviewSubmit(3)}>Good</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-700\" onClick={() => handleReviewSubmit(5)}>Easy</button>\r\n                        <button className=\"mt-2 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-700\" onClick={handleGetHint}>Get Hint</button>\r\n                    </>\r\n                ) : (\r\n                    <div><h2>Thank you for completing your reviews for today!</h2></div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWxB,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZiB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,4CAA4C,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MACzGR,WAAW,CAACM,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAGJ,QAAQ,CAACG,IAAI,GAAG,EAAE,CAAC;MACtDL,cAAc,CAACE,QAAQ,CAACG,IAAI,CAACC,MAAM,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACnBf,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAGD,MAAMiB,kBAAkB,GAAG,MAAOC,OAAe,IAAK;IAClD,MAAMC,SAAS,GAAGjB,QAAQ,CAACE,mBAAmB,CAAC,CAACgB,GAAG;IACnD,IAAI;MACA,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,6CAA6CF,SAAS,EAAE,EAAE;QAAED;MAAQ,CAAC,EAAE;QAAEP,eAAe,EAAE;MAAK,CAAC,CAAC;MACjHW,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAM;MAAEC,IAAI;MAAEC,aAAa;MAAEC;IAAS,CAAC,GAAGxB,QAAQ,CAACE,mBAAmB,CAAC;IACvE,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACkC,IAAI,CAAC,sCAAsC,EAAE;QACtEH,IAAI;QACJC,aAAa;QACbC,QAAQ;QACRf,eAAe,EAAE;MACrB,CAAC,CAAC;MACFiB,KAAK,CAAC,QAAQ,GAAGnB,QAAQ,CAACG,IAAI,CAACiB,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMQ,SAAS,GAAG,CAAC1B,mBAAmB,GAAG,CAAC,IAAIF,QAAQ,CAACW,MAAM;IAC7DR,sBAAsB,CAACyB,SAAS,CAAC;IACjC7B,YAAY,CAAC,KAAK,CAAC;IACnB,IAAI6B,SAAS,KAAK,CAAC,EAAE;MACjBvB,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC;EAED,MAAMwB,sBAAsB,GAAIC,IAAY,IAAgB;IACxD,OAAOA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,GAAW,EAAEC,KAAa,kBACnDzC,OAAA,CAACN,KAAK,CAACO,QAAQ;MAAAyC,QAAA,GACVF,GAAG,eACJxC,OAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAFWL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACnB,CAAC;EACN,CAAC;EAED,MAAM;IAAEf,QAAQ;IAAED,aAAa;IAAED,IAAI;IAAEkB;EAAM,CAAC,GAAGxC,QAAQ,CAACE,mBAAmB,CAAC,IAAI,CAAC,CAAC;EAEpF,oBACIT,OAAA;IAAA0C,QAAA,EACKnC,QAAQ,CAACW,MAAM,KAAK,CAAC,gBAClBlB,OAAA;MAAA0C,QAAA,eAAK1C,OAAA;QAAA0C,QAAA,EAAI;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAE/D,CAACnC,WAAW,gBACRX,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACI1C,OAAA,CAACH,aAAa;QAACmD,aAAa,EAAC,YAAY;QAAC3C,SAAS,EAAEA,SAAU;QAAAqC,QAAA,gBAC3D1C,OAAA;UAAKiD,SAAS,EAAC,4CAA4C;UAACC,OAAO,EAAE7B,QAAS;UAAAqB,QAAA,gBAC1E1C,OAAA;YAAIiD,SAAS,EAAC,oBAAoB;YAAAP,QAAA,EAAEZ;UAAa;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnD9C,OAAA;YAAGiD,SAAS,EAAC,qDAAqD;YAAAP,QAAA,EAAEN,sBAAsB,CAACL,QAAQ;UAAC;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5G,CAAC,eACF9C,OAAA;UAAKiD,SAAS,EAAC,mFAAmF;UAACC,OAAO,EAAE7B,QAAS;UAAAqB,QAAA,gBACrH1C,OAAA;YAAIiD,SAAS,EAAC,oBAAoB;YAAAP,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC9C,OAAA;YAAKiD,SAAS,EAAC,oDAAoD;YAAAP,QAAA,EAAEnC,QAAQ,CAACE,mBAAmB,CAAC,CAACoB;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9G9C,OAAA;YAAIiD,SAAS,EAAC,6CAA6C;YAAAP,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtE9C,OAAA;YAAGiD,SAAS,EAAC,qDAAqD;YAAAP,QAAA,EAAEN,sBAAsB,CAACW,KAAK;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAChB9C,OAAA;QAAQiD,SAAS,EAAC,kEAAkE;QAACC,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAAC,CAAC,CAAE;QAAAoB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxI9C,OAAA;QAAQiD,SAAS,EAAC,sEAAsE;QAACC,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAAC,CAAC,CAAE;QAAAoB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5I9C,OAAA;QAAQiD,SAAS,EAAC,oEAAoE;QAACC,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAAC,CAAC,CAAE;QAAAoB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1I9C,OAAA;QAAQiD,SAAS,EAAC,wEAAwE;QAACC,OAAO,EAAEtB,aAAc;QAAAc,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtI,CAAC,gBAEH9C,OAAA;MAAA0C,QAAA,eAAK1C,OAAA;QAAA0C,QAAA,EAAI;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAE1E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1C,EAAA,CApGWD,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAsGrB,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}