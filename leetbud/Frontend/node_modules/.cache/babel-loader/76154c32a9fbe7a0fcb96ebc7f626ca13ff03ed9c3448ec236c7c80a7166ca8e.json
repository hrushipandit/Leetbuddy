{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\Personal Projects\\\\Leetbud\\\\leetbud\\\\src\\\\components\\\\pages\\\\Problems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Make sure to import axios\nimport './Problems.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Problems() {\n  _s();\n  const [entries, setEntries] = useState([]); // Define state inside the component\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/problems').then(response => {\n      setEntries(response.data); // Update state with fetched data\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array means this runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problems-container\",\n    children: entries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, entry._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Problems, \"si2ZVsazrWomTuBdDT2zYRo3CE0=\");\n_c = Problems;\nexport default Problems;\nvar _c;\n$RefreshReg$(_c, \"Problems\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Problems","_s","entries","setEntries","get","then","response","data","catch","error","console","className","children","map","entry","fileName","_jsxFileName","lineNumber","columnNumber","code","notes","_id","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/Personal Projects/Leetbud/leetbud/src/components/pages/Problems.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';  // Make sure to import axios\r\nimport './Problems.css';\r\n\r\ninterface Entry {\r\n    _id: string;\r\n    code: string;\r\n    notes: string;\r\n}\r\n\r\n\r\nfunction Problems() {\r\n    const [entries, setEntries] = useState([]); // Define state inside the component\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/problems')\r\n            .then(response => {\r\n                setEntries(response.data); // Update state with fetched data\r\n            })\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []); // Empty dependency array means this runs once on component mount\r\n\r\n    return (\r\n        <div className=\"problems-container\">\r\n            {entries.map(entry => (\r\n                <div key={entry._id}>\r\n                    <h3>Code:</h3>\r\n                    <p>{entry.code}</p>\r\n                    <h3>Notes:</h3>\r\n                    <p>{entry.notes}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Problems;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5CC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACO,GAAG,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MACdH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIV,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAC9BV,OAAO,CAACW,GAAG,CAACC,KAAK,iBACdf,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdnB,OAAA;QAAAa,QAAA,EAAIE,KAAK,CAACK;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBnB,OAAA;QAAAa,QAAA,EAAI;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfnB,OAAA;QAAAa,QAAA,EAAIE,KAAK,CAACM;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJdJ,KAAK,CAACO,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKd,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjB,EAAA,CAvBQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}